#if !canImport(ObjectiveC)
import XCTest

extension ASTContextTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ASTContextTests = [
        ("testOptionalParams", testOptionalParams),
        ("testSubcommands", testSubcommands),
        ("testTrailingBooleanOptionalParam", testTrailingBooleanOptionalParam),
    ]
}

extension LexerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LexerTests = [
        ("testBoolean", testBoolean),
        ("testDecimal", testDecimal),
        ("testInt", testInt),
        ("testNonContextuals", testNonContextuals),
        ("testString", testString),
    ]
}

extension OptionalParamTypeCheckerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OptionalParamTypeCheckerTests = [
        ("testTypeCheckingFail", testTypeCheckingFail),
        ("testTypeCheckingOK", testTypeCheckingOK),
    ]
}

extension RequiredParamTypeCheckerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RequiredParamTypeCheckerTests = [
        ("testCombinedFailure", testCombinedFailure),
        ("testCombinedSuccess", testCombinedSuccess),
        ("testMultipleRecurrsingSuccess", testMultipleRecurrsingSuccess),
        ("testSingleRecurringFailure", testSingleRecurringFailure),
        ("testSingleRecurringSuccess", testSingleRecurringSuccess),
    ]
}

extension SourceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SourceTests = [
        ("testMultipleBlocks", testMultipleBlocks),
        ("testSingeBlock", testSingeBlock),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ASTContextTests.__allTests__ASTContextTests),
        testCase(LexerTests.__allTests__LexerTests),
        testCase(OptionalParamTypeCheckerTests.__allTests__OptionalParamTypeCheckerTests),
        testCase(RequiredParamTypeCheckerTests.__allTests__RequiredParamTypeCheckerTests),
        testCase(SourceTests.__allTests__SourceTests),
    ]
}
#endif
